FROM python:3.12.1-slim as base

RUN pip install --upgrade pip

# Stage 1: Build temp image (builder) with wheel.
# ===============================================

# Pulls official base image.
FROM base as builder

# Sets the working directory.
WORKDIR /usr/src/app

# Set the environment variables.
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install required packages.
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# Run lint on the code.
RUN pip install flake8==6.0.0
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401 .

# Install Python dependencies.
COPY ./requirements.txt .
# Create wheel.
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


# Final stage.
# =====================

# Pulls official base image.
FROM base as production

# Create a directory for the app user.
RUN mkdir -p /home/app

# Create app user to avoid running as root user.
RUN addgroup --system app && adduser --system --group app

# Create the appropriate directories and set working directory.
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# Install packages and wheel.
RUN apt-get update && apt-get install -y --no-install-recommends netcat-traditional
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# Copy entrypoint.prod.sh.
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# Copy project source.
COPY . $APP_HOME

# Change ownership of all the files to the app user.
RUN chown -R app:app $APP_HOME

# Change to the app user.
USER app

# Finally, run entrypoint.prod.sh!
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
